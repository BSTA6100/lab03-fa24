{
  "hash": "b964e5e6bcbef578e8834456d17c62ee",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"BSTA 6100 Lab 3: Logistic Regression\"\nauthor: \"Nicholas J. Seewald, Ph.D.\"\nformat:\n  html:\n    toc: true\n    toc_float: true\n    toc_collapsed: true\n    theme: lumen\n    css: assets/styles.css\n    self-contained: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\nThis lab introduces logistic regression, a model for the association of a binary response variable with one or more predictors or covariates. Simple logistic regression generalizes methods for two-way tables and allows for the use of a numerical predictor.\n\nThe material in this lab is adapted from *OpenIntro Biostatistics*.\n\n## Background Information\n\nSleep apnea, literally “without breath”, occurs during sleep when one’s breath becomes very shallow or briefly stops altogether. Episodes of sleep apnea typically last 20 to 40 seconds and can happen many times a night in some people. Sleep apnea is of various types, one of which is obstructive sleep apnea (OSA) and is the focus of this dataset. OSA has physical causes; it occurs when something partly or completely blocks the upper airway during sleep. OSA is usually associated with a reduction in blood oxygen saturation. Notably, approximately 30% of the general population suffer from OSA.\n\nObstructive sleep apnea (OSA) is characterized by specific events and their severity. OSA events are of two types: an apnea, characterized by complete cessation of airflow for at least 10 seconds, or a hypopnea in which airflow decreases by 50 percent for 10 seconds or decreases by 30 percent if there is an associated decrease in the oxygen saturation or an arousal from sleep. Sleep apnea severity is the frequency of event occurrence per hour and is assessed using the apnea-hypopnea index (AHI). An AHI of less than 5 is considered normal. An AHI of 5-14 is mild; 15-29 is moderate and 30 or more events per hour characterizes severe sleep apnea.\n\nAs a result of OSA, nocturnal oxygenation levels are often lower than normal. Two common measures are the percentage of total sleep time spent at Sao2 less than 90% and the minimum nocturnal Sao2 listed in polysomnography reports. OSA is of concern because of its relationship to cardiovascular disease, with a diagnosis of moderate-to-severe disease (AHI ≥ 15) being identified as an independent risk factor for all-cause and cardiovascular mortality. Patients suffering from OSA present with a chronic enhancement in sympathetic adrenergic activity (system involved in maintaining homeostasis) that is considered one of the major mechanisms in the development of cardiovascular health issues in this population. Such hemodynamic instability is hypothesized to increase the risk for intraoperative and/or postoperative morbidity in OSA patients undergoing surgery.\n\nWe'll start by loading the data:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhypoxia <- read.csv(\"hypoxia.csv\", stringsAsFactors = T)\n```\n:::\n\n\n\n## Working with Factors in R\n\nThe `hypoxia` data codes binary variables as 0 or 1. Let's convert some of these to factors to see how they work.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(hypoxia$Female)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  0   1 \n 80 201 \n```\n\n\n:::\n\n```{.r .cell-code}\nhypoxia$Female <- factor(hypoxia$Female, \n                         levels = c(0, 1),\n                         labels = c(\"Male\", \"Female\"))\ntable(hypoxia$Female)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  Male Female \n    80    201 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(hypoxia$Race)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  1   2   3 \n 57 216   8 \n```\n\n\n:::\n\n```{.r .cell-code}\nhypoxia$Race <- factor(hypoxia$Race,\n                       levels = 1:3,\n                       labels = c(\"African-American\", \"Caucasian\", \"Other\"))\ntable(hypoxia$Race)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nAfrican-American        Caucasian            Other \n              57              216                8 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(hypoxia$Diabetes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  0   1 \n184  97 \n```\n\n\n:::\n\n```{.r .cell-code}\nhypoxia$Diabetes <- factor(hypoxia$Diabetes,\n                           levels = 0:1,\n                           labels = c(\"no\", \"yes\"))\ntable(hypoxia$Diabetes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n no yes \n184  97 \n```\n\n\n:::\n:::\n\n\n\nImportantly, we need to consider multi-level categorical data as a factor and not as a numeric variable (see Problem Set 4). The Apnea/Hypopnea index (AHI) is a measure of severity of sleep apnea, and counts the number of apneic and hypopneic (airway collapse) events per hour of sleep. Currently, it's coded as a numeric variable:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(hypoxia$AHI)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n  1.000   2.000   3.000   2.871   4.000   4.000       3 \n```\n\n\n:::\n\n```{.r .cell-code}\ntable(hypoxia$AHI, useNA = \"ifany\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n   1    2    3    4 <NA> \n  38   68   64  108    3 \n```\n\n\n:::\n:::\n\n\n\nWe want to recode it as a factor, because we don't want to inadvertently assume it has a linear relationship with any outcomes we're interested in.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhypoxia$AHI <- factor(hypoxia$AHI,\n                      levels = 1:4,\n                      labels = c(\"normal\", \"mild\", \"moderate\", \"severe\"))\n```\n:::\n\n\n\n\nBy default, R orders **factor levels** alphanumerically, and takes the first level as the reference group.\nWe don't always want this! There are a few ways to manually set the reference group.\n\nWe can relevel the `Female` variable to be an indicator for male gender:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhypoxia$Male <- relevel(hypoxia$Female, ref = \"Female\")\nlevels(hypoxia$Male)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Female\" \"Male\"  \n```\n\n\n:::\n\n```{.r .cell-code}\ntable(hypoxia$Male, hypoxia$Female)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        \n         Male Female\n  Female    0    201\n  Male     80      0\n```\n\n\n:::\n:::\n\n\n\nFor factors with more than 2 levels, `relevel()` only moves `ref` to the front: it doesn't completely reorder the levels. For the `Race` variable, `African-American` is the reference group. Let's change it to `Other`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(hypoxia$Race)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"African-American\" \"Caucasian\"        \"Other\"           \n```\n\n\n:::\n\n```{.r .cell-code}\nhypoxia$Race <- relevel(hypoxia$Race, ref = \"Other\")\nlevels(hypoxia$Race)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Other\"            \"African-American\" \"Caucasian\"       \n```\n\n\n:::\n:::\n\n\n\nIf we want to completely reorder the factor levels, we need to rebuild the factor. Let's set a new order for the `Race` variable:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(hypoxia$Race)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Other\"            \"African-American\" \"Caucasian\"       \n```\n\n\n:::\n\n```{.r .cell-code}\n# NOTE: Levels must be specified **exactly** as they appear in the data\nhypoxia$Race2 <- factor(hypoxia$Race, \n                        levels = c(\"Caucasian\", \"African-American\", \"Other\"))\nlevels(hypoxia$Race2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Caucasian\"        \"African-American\" \"Other\"           \n```\n\n\n:::\n:::\n\n\n\nWe can also go back to alphabetical order:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhypoxia$Race3 <- factor(hypoxia$Race, levels = sort(levels(hypoxia$Race)))\nlevels(hypoxia$Race3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"African-American\" \"Caucasian\"        \"Other\"           \n```\n\n\n:::\n:::\n\n\n\n## Logistic Regression in R\n\nWe'll start with a simple logistic regression model to examine associations between receipt of intraoperative antihypertensive medication (`Intraop_AntiHyper_Med`), smoking status, and AHI.\n\nReceipt of intraoperative antihypertensive medication is currently a numeric variable coded such that 1 is \"receipt\" and 0 is \"no receipt\".\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis(hypoxia$Intraop_AntiHyper_Med)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"integer\"             \"double\"              \"numeric\"            \n [4] \"vector\"              \"data.frameRowLabels\" \"index\"              \n [7] \"replValue\"           \"numLike\"             \"number\"             \n[10] \"atomicVector\"       \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(hypoxia$Intraop_AntiHyper_Med)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.0000  0.3096  1.0000  1.0000 \n```\n\n\n:::\n:::\n\n\n\nWe can make a 2x2 table to examine the relationship between intraoperative antihypertensive medication use and smoking:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naddmargins(\n  table(hypoxia$Smoking, hypoxia$Intraop_AntiHyper_Med,\n        dnn = c(\"Smoking\", \"Intraop AntiHyper Meds\"))\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       Intraop AntiHyper Meds\nSmoking   0   1 Sum\n    0   103  37 140\n    1    91  50 141\n    Sum 194  87 281\n```\n\n\n:::\n:::\n\n\n\n### Fitting Logistic Regression Models\nNow, we can fit a logistic regression model using the `glm()` function.\n\nBecause our outcome is coded as 0/1 with 1 a \"success\" (i.e., receipt of intraoperative antihypertensive medication), we can use it directly in the GLM. However, just to be sure, we can recode it so we know we're modeling the correct outcome:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhypoxia$iahm <- hypoxia$Intraop_AntiHyper_Med == 1\ntable(hypoxia$iahm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFALSE  TRUE \n  194    87 \n```\n\n\n:::\n:::\n\n\n\nNow, the `iahm` variable is binary with `TRUE` corresponding to \"success\".\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# note we're using the recoded status variable\nmod1 <- glm(iahm ~ Smoking, data = hypoxia, family = binomial(link = \"logit\"))\nsummary(mod1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = iahm ~ Smoking, family = binomial(link = \"logit\"), \n    data = hypoxia)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -1.0238     0.1917  -5.342 9.21e-08 ***\nSmoking       0.4250     0.2602   1.633    0.102    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 347.76  on 280  degrees of freedom\nResidual deviance: 345.07  on 279  degrees of freedom\nAIC: 349.07\n\nNumber of Fisher Scoring iterations: 4\n```\n\n\n:::\n:::\n\n\n\nWe can add multiple covariates to the model just as with linear regression:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod2 <- glm(iahm ~ Smoking + Age + AHI, data = hypoxia,\n            family = binomial(link = \"logit\"))\nsummary(mod2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = iahm ~ Smoking + Age + AHI, family = binomial(link = \"logit\"), \n    data = hypoxia)\n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)   \n(Intercept) -1.807781   0.660066  -2.739  0.00617 **\nSmoking      0.275013   0.275970   0.997  0.31899   \nAge          0.009906   0.012907   0.767  0.44281   \nAHImild      0.414095   0.483597   0.856  0.39184   \nAHImoderate  0.169768   0.498800   0.340  0.73359   \nAHIsevere    0.570652   0.465214   1.227  0.21996   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 342.31  on 277  degrees of freedom\nResidual deviance: 336.49  on 272  degrees of freedom\n  (3 observations deleted due to missingness)\nAIC: 348.49\n\nNumber of Fisher Scoring iterations: 4\n```\n\n\n:::\n:::\n\n\n\nWe can get predicted probabilities:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# \"fitted values\" are the predicted probabilities for each individual\nsummary(mod2$fitted.values)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.1638  0.2573  0.3054  0.3058  0.3614  0.4403 \n```\n\n\n:::\n:::\n\n\n\n### Prediction\n\nWe can use the `predict()` function with `type = \"link\"` to get log-odds for a\nparticular combination of covariate values. Note that `type = \"link\"` is the \n**default**: `predict()` will return values on the *link scale* by default.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Log-odds for a particular combination of covariates:\npredict(mod2, \n        newdata = data.frame(\"Smoking\" = 0, \n                             \"Age\" = median(hypoxia$Age), \n                             \"AHI\" = \"mild\"),\n        type = \"link\", \n        se.fit = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$fit\n         1 \n-0.9162336 \n\n$se.fit\n[1] 0.2987873\n\n$residual.scale\n[1] 1\n```\n\n\n:::\n:::\n\n\n\nWe can get predicted probabilities by setting `type = \"response\"`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(mod2, \n        newdata = data.frame(\"Smoking\" = 0, \n                             \"Age\" = median(hypoxia$Age), \n                             \"AHI\" = \"mild\"),\n        type = \"response\", \n        se.fit = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$fit\n        1 \n0.2857259 \n\n$se.fit\n        1 \n0.0609785 \n\n$residual.scale\n[1] 1\n```\n\n\n:::\n:::\n\n\n\n### Hypothesis Testing\n\n#### Wald Tests\nTo conduct a Wald test, we'll use the `wald.test()` function from the `aod` package.\n\n\n::: {.cell}\n\n:::\n\n\n\n\nConsider our `mod2` model from earlier:\n$$\n  \\mathrm{logit}(p_i) = \\beta_0 + \\beta_1 \\texttt{Smoking}_i + \\beta_2 \\texttt{Age}_i + \\beta_3 \\texttt{MildAHI}_i + \\beta_4 \\texttt{ModerateAHI}_i + \\beta_5 \\texttt{SevereAHI}_i\n$$\nLet's test hypotheses to see whether the log-odds of intraop antihypertensive medication receipt varies between individuals with mild and moderate AHI, holding smoking status and age fixed. This corresponds to hypotheses\n\n$$H_0:  \\quad \\text{vs.} \\quad H_1:$$\n\nUsing a Wald test:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwald.test(Sigma = vcov(mod2), b = coef(mod2), L = matrix(c(0, 0, 0, 1, -1, 0), nrow = 1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nWald test:\n----------\n\nChi-squared test:\nX2 = 0.4, df = 1, P(> X2) = 0.53\n```\n\n\n:::\n:::\n\n\n\nNotice how this is related to the output from `glht`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(glht(mod2, linfct = matrix(c(0, 0, 0, 1, -1, 0), nrow = 1)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\t Simultaneous Tests for General Linear Hypotheses\n\nFit: glm(formula = iahm ~ Smoking + Age + AHI, family = binomial(link = \"logit\"), \n    data = hypoxia)\n\nLinear Hypotheses:\n       Estimate Std. Error z value Pr(>|z|)\n1 == 0   0.2443     0.3882   0.629    0.529\n(Adjusted p values reported -- single-step method)\n```\n\n\n:::\n:::\n\n\n\n\n#### Likelihood Ratio Tests\nWe can also compare nested models using likelihood ratio tests.\n\nConsider a *reduced* model that excludes smoking status:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod3 <- update(mod2, ~ . -Smoking)\nsummary(mod3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = iahm ~ Age + AHI, family = binomial(link = \"logit\"), \n    data = hypoxia)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)   \n(Intercept) -1.85237    0.65652  -2.822  0.00478 **\nAge          0.01288    0.01250   1.030  0.30296   \nAHImild      0.45097    0.48146   0.937  0.34892   \nAHImoderate  0.22516    0.49481   0.455  0.64908   \nAHIsevere    0.62766    0.46112   1.361  0.17346   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 342.31  on 277  degrees of freedom\nResidual deviance: 337.48  on 273  degrees of freedom\n  (3 observations deleted due to missingness)\nAIC: 347.48\n\nNumber of Fisher Scoring iterations: 4\n```\n\n\n:::\n:::\n\n\n\nWe can *manually* conduct a likelihood ratio test as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# wrapping code in parentheses so we store & print simultaneously\n(mod2.loglik <- logLik(mod2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'log Lik.' -168.2434 (df=6)\n```\n\n\n:::\n\n```{.r .cell-code}\n(mod3.loglik <- logLik(mod3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'log Lik.' -168.7415 (df=5)\n```\n\n\n:::\n\n```{.r .cell-code}\n(lrt_stat <- 2 * as.numeric(mod2.loglik - mod3.loglik))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9960565\n```\n\n\n:::\n\n```{.r .cell-code}\npchisq(q = lrt_stat, df = 1, lower.tail = F)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3182666\n```\n\n\n:::\n:::\n\n\n\nWe can automatically perform an LRT using the `anova()` function (get help by calling `?anova.glm`)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(mod3, mod2, test = \"LRT\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Deviance Table\n\nModel 1: iahm ~ Age + AHI\nModel 2: iahm ~ Smoking + Age + AHI\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)\n1       273     337.48                     \n2       272     336.49  1  0.99606   0.3183\n```\n\n\n:::\n:::\n\n\n\n### Model Comparison using AIC\n\nThe **AIC (Akaike Information Criterion)** can be used to compare models. It is analogous to the adjusted $R^2$ for linear regression in that it penalizes a model for having a larger number of predictors. \n\n$$\n\\mathrm{AIC} = 2k - 2\\ell(\\hat{\\beta}),\n$$\nwhere $k$ is the number of parameters in the model. A *lower* AIC is indicative of a more parsimonious model.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}